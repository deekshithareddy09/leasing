"use strict";
/**
 * Created by laurence-ho on 21/07/17.
 */
var express = require("express");
var session = require("express-session");
var bodyParser = require("body-parser");
var path = require("path");
var passport = require("passport");
var expressSanitizer = require('express-sanitizer');
//initial database schema
var database = require('./database/db.service');
require('./database/db.schema')(database);
require('./passport')(passport);
var app = express();
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use('/app', express.static(path.resolve(__dirname, '../client/app')));
app.use('/libs', express.static(path.resolve(__dirname, '../client/libs')));
// for system.js to work. Can be removed if bundling.
app.use(express.static(path.resolve(__dirname, '../client')));
app.use(express.static(path.resolve(__dirname, '../../node_modules')));
app.use(expressSanitizer());
app.use(session({
    secret: 'mySecretKey',
    resave: true,
    saveUninitialized: true
}));
app.use(passport.initialize());
app.use(passport.session());
//initial routes
var userRoutes = require('./routes/user');
app.use('/api', userRoutes);
app.get('/', function (req, res) {
    res.sendFile(path.resolve(__dirname, '../client/index.html'));
});
app.get('*', function (req, res) {
    res.send('Sorry, page not found!');
});
app.listen(8080, function () {
    console.log('This express angular app is listening on port:' + 8080);
});
module.exports = app;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7QUFFSCxpQ0FBb0M7QUFDcEMseUNBQTRDO0FBQzVDLHdDQUEyQztBQUMzQywyQkFBOEI7QUFDOUIsbUNBQXNDO0FBQ3RDLElBQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFdEQseUJBQXlCO0FBQ3pCLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ2xELE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRTFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUVoQyxJQUFNLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUV0QixHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xELEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFFM0IsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUU1RSxxREFBcUQ7QUFDckQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5RCxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdkUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7QUFFNUIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUM7SUFDZixNQUFNLEVBQUUsYUFBYTtJQUNyQixNQUFNLEVBQUUsSUFBSTtJQUNaLGlCQUFpQixFQUFFLElBQUk7Q0FDdkIsQ0FBQyxDQUFDLENBQUM7QUFDSixHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFFNUIsZ0JBQWdCO0FBQ2hCLElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUU1QyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUU1QixHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDLEdBQVEsRUFBRSxHQUFRO0lBQy9CLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO0FBQy9ELENBQUMsQ0FBQyxDQUFDO0FBRUgsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsVUFBQyxHQUFRLEVBQUUsR0FBUTtJQUMvQixHQUFHLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtJQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLGdEQUFnRCxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3RFLENBQUMsQ0FBQyxDQUFDO0FBRUgsaUJBQVMsR0FBRyxDQUFDIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBsYXVyZW5jZS1obyBvbiAyMS8wNy8xNy5cbiAqL1xuXG5pbXBvcnQgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmltcG9ydCBzZXNzaW9uID0gcmVxdWlyZSgnZXhwcmVzcy1zZXNzaW9uJyk7XG5pbXBvcnQgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5pbXBvcnQgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmltcG9ydCBwYXNzcG9ydCA9IHJlcXVpcmUoJ3Bhc3Nwb3J0Jyk7XG5jb25zdCBleHByZXNzU2FuaXRpemVyID0gcmVxdWlyZSgnZXhwcmVzcy1zYW5pdGl6ZXInKTtcblxuLy9pbml0aWFsIGRhdGFiYXNlIHNjaGVtYVxuY29uc3QgZGF0YWJhc2UgPSByZXF1aXJlKCcuL2RhdGFiYXNlL2RiLnNlcnZpY2UnKTtcbnJlcXVpcmUoJy4vZGF0YWJhc2UvZGIuc2NoZW1hJykoZGF0YWJhc2UpO1xuXG5yZXF1aXJlKCcuL3Bhc3Nwb3J0JykocGFzc3BvcnQpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogZmFsc2V9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnVzZSgnL2FwcCcsIGV4cHJlc3Muc3RhdGljKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi9jbGllbnQvYXBwJykpKTtcbmFwcC51c2UoJy9saWJzJywgZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2NsaWVudC9saWJzJykpKTtcblxuLy8gZm9yIHN5c3RlbS5qcyB0byB3b3JrLiBDYW4gYmUgcmVtb3ZlZCBpZiBidW5kbGluZy5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2NsaWVudCcpKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi8uLi9ub2RlX21vZHVsZXMnKSkpO1xuXG5hcHAudXNlKGV4cHJlc3NTYW5pdGl6ZXIoKSk7XG5cbmFwcC51c2Uoc2Vzc2lvbih7XG5cdHNlY3JldDogJ215U2VjcmV0S2V5Jyxcblx0cmVzYXZlOiB0cnVlLFxuXHRzYXZlVW5pbml0aWFsaXplZDogdHJ1ZVxufSkpO1xuYXBwLnVzZShwYXNzcG9ydC5pbml0aWFsaXplKCkpO1xuYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpO1xuXG4vL2luaXRpYWwgcm91dGVzXG5jb25zdCB1c2VyUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcicpO1xuXG5hcHAudXNlKCcvYXBpJywgdXNlclJvdXRlcyk7XG5cbmFwcC5nZXQoJy8nLCAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XG5cdHJlcy5zZW5kRmlsZShwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vY2xpZW50L2luZGV4Lmh0bWwnKSk7XG59KTtcblxuYXBwLmdldCgnKicsIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcblx0cmVzLnNlbmQoJ1NvcnJ5LCBwYWdlIG5vdCBmb3VuZCEnKTtcbn0pO1xuXG5hcHAubGlzdGVuKDgwODAsICgpID0+IHtcblx0Y29uc29sZS5sb2coJ1RoaXMgZXhwcmVzcyBhbmd1bGFyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydDonICsgODA4MCk7XG59KTtcblxuZXhwb3J0ID0gYXBwOyJdfQ==
