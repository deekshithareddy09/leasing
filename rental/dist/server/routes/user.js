"use strict";
/**
 * Created by laurence-ho on 22/07/17.
 */
var express = require("express");
var router = express.Router();
var passport = require('passport');
var authentication = require('../authentication');
router.post('/login', function (req, res, next) {
    passport.authenticate('local-login', function (err, user, info) {
        if (err) {
            return res.status(401).send({ message: err.message });
        }
        if (!user) {
            return res.status(401).send({ message: info.message });
        }
        req.logIn(user, function (err) {
            if (err) {
                return res.status(401).send({ message: err.message });
            }
            var milliseconds = 0;
            if (req.body.remember) {
                milliseconds = 1000 * 60 * 30; // 30 minutes
                req.session.cookie.expires = new Date(Date.now() + milliseconds);
                req.session.cookie.maxAge = milliseconds;
            }
            else {
                milliseconds = 1000 * 60 * 60 * 24; // 1 day
                req.session.cookie.expires = new Date(Date.now() + milliseconds);
                req.session.cookie.maxAge = milliseconds;
            }
            return res.status(200).json(req.user);
        });
    })(req, res, next);
});
router.post('/signup', function (req, res, next) {
    passport.authenticate('local-signup', function (err, user, info) {
        if (err) {
            return res.status(403).send({ 'message': err.message });
        }
        if (!user) {
            return res.status(403).send({ 'message': info.message });
        }
        return res.status(200).send({ 'message': 'OK' });
    })(req, res, next);
});
router.get('/profile', authentication.isLoggedIn, function (req, res) {
    res.json(req.user);
});
router.get('/logout', function (req) {
    req.session.destroy(function (err) {
        console.error(err);
    });
    req.logout();
});
module.exports = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy91c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRztBQUVILGlDQUFtQztBQUNuQyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFaEMsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3JDLElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBRXBELE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQUMsR0FBUSxFQUFFLEdBQVEsRUFBRSxJQUFTO0lBQ25ELFFBQVEsQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLFVBQUMsR0FBUSxFQUFFLElBQVMsRUFBRSxJQUFTO1FBQ25FLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDVCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDckQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNYLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUN0RCxDQUFDO1FBQ0QsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsVUFBQyxHQUFRO1lBQ3hCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ1QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO1lBQ3JELENBQUM7WUFFRCxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7WUFDckIsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN2QixZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxhQUFhO2dCQUU1QyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLFlBQVksQ0FBQyxDQUFDO2dCQUNqRSxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsWUFBWSxDQUFDO1lBQzFDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDUCxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsUUFBUTtnQkFFNUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxZQUFZLENBQUMsQ0FBQztnQkFDakUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQztZQUMxQyxDQUFDO1lBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFDLEdBQVEsRUFBRSxHQUFRLEVBQUUsSUFBUztJQUNuRCxRQUFRLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxVQUFDLEdBQVEsRUFBRSxJQUFTLEVBQUUsSUFBUztRQUNwRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ1QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO1FBQ3ZELENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDWCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUVELE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUNELENBQUM7QUFFRixNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxjQUFjLENBQUMsVUFBVSxFQUFFLFVBQUMsR0FBUSxFQUFFLEdBQVE7SUFDcEUsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxVQUFDLEdBQVE7SUFDOUIsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBQyxHQUFRO1FBQzVCLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEIsQ0FBQyxDQUFDLENBQUM7SUFDSCxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDZCxDQUFDLENBQUMsQ0FBQztBQUVILGlCQUFTLE1BQU0sQ0FBQyIsImZpbGUiOiJyb3V0ZXMvdXNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBsYXVyZW5jZS1obyBvbiAyMi8wNy8xNy5cbiAqL1xuXG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgcGFzc3BvcnQgPSByZXF1aXJlKCdwYXNzcG9ydCcpO1xuY29uc3QgYXV0aGVudGljYXRpb24gPSByZXF1aXJlKCcuLi9hdXRoZW50aWNhdGlvbicpO1xuXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgKHJlcTogYW55LCByZXM6IGFueSwgbmV4dDogYW55KSA9PiB7XG5cdHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZSgnbG9jYWwtbG9naW4nLCAoZXJyOiBhbnksIHVzZXI6IGFueSwgaW5mbzogYW55KSA9PiB7XG5cdFx0aWYgKGVycikge1xuXHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHttZXNzYWdlOiBlcnIubWVzc2FnZX0pO1xuXHRcdH1cblx0XHRpZiAoIXVzZXIpIHtcblx0XHRcdHJldHVybiByZXMuc3RhdHVzKDQwMSkuc2VuZCh7bWVzc2FnZTogaW5mby5tZXNzYWdlfSk7XG5cdFx0fVxuXHRcdHJlcS5sb2dJbih1c2VyLCAoZXJyOiBhbnkpID0+IHtcblx0XHRcdGlmIChlcnIpIHtcblx0XHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHttZXNzYWdlOiBlcnIubWVzc2FnZX0pO1xuXHRcdFx0fVxuXG5cdFx0XHRsZXQgbWlsbGlzZWNvbmRzID0gMDtcblx0XHRcdGlmIChyZXEuYm9keS5yZW1lbWJlcikge1xuXHRcdFx0XHRtaWxsaXNlY29uZHMgPSAxMDAwICogNjAgKiAzMDsgLy8gMzAgbWludXRlc1xuXG5cdFx0XHRcdHJlcS5zZXNzaW9uLmNvb2tpZS5leHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIG1pbGxpc2Vjb25kcyk7XG5cdFx0XHRcdHJlcS5zZXNzaW9uLmNvb2tpZS5tYXhBZ2UgPSBtaWxsaXNlY29uZHM7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtaWxsaXNlY29uZHMgPSAxMDAwICogNjAgKiA2MCAqIDI0OyAvLyAxIGRheVxuXG5cdFx0XHRcdHJlcS5zZXNzaW9uLmNvb2tpZS5leHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIG1pbGxpc2Vjb25kcyk7XG5cdFx0XHRcdHJlcS5zZXNzaW9uLmNvb2tpZS5tYXhBZ2UgPSBtaWxsaXNlY29uZHM7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVxLnVzZXIpO1xuXHRcdH0pO1xuXHR9KShyZXEsIHJlcywgbmV4dCk7XG59KTtcblxucm91dGVyLnBvc3QoJy9zaWdudXAnLCAocmVxOiBhbnksIHJlczogYW55LCBuZXh0OiBhbnkpID0+IHtcblx0XHRwYXNzcG9ydC5hdXRoZW50aWNhdGUoJ2xvY2FsLXNpZ251cCcsIChlcnI6IGFueSwgdXNlcjogYW55LCBpbmZvOiBhbnkpID0+IHtcblx0XHRcdGlmIChlcnIpIHtcblx0XHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHsnbWVzc2FnZSc6IGVyci5tZXNzYWdlfSk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghdXNlcikge1xuXHRcdFx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDMpLnNlbmQoeydtZXNzYWdlJzogaW5mby5tZXNzYWdlfSk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7J21lc3NhZ2UnOiAnT0snfSk7XG5cdFx0fSkocmVxLCByZXMsIG5leHQpO1xuXHR9XG4pO1xuXG5yb3V0ZXIuZ2V0KCcvcHJvZmlsZScsIGF1dGhlbnRpY2F0aW9uLmlzTG9nZ2VkSW4sIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcblx0cmVzLmpzb24ocmVxLnVzZXIpO1xufSk7XG5cbnJvdXRlci5nZXQoJy9sb2dvdXQnLCAocmVxOiBhbnkpID0+IHtcblx0cmVxLnNlc3Npb24uZGVzdHJveSgoZXJyOiBhbnkpID0+IHtcblx0XHRjb25zb2xlLmVycm9yKGVycik7XG5cdH0pO1xuXHRyZXEubG9nb3V0KCk7XG59KTtcblxuZXhwb3J0ID0gcm91dGVyO1xuIl19
